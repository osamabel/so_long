/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   painter                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: obelkhad <obelkhad@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/12/24 16:23:20 by obelkhad          #+#    #+#             */
/*   Updated: 2022/01/03 19:19:35 by obelkhad         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "mlx.h"
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

// int kbdhook(int keycode, void *b)
// {
// 	if (keycode == 53)
// 		exit(0);
// 	printf("keycode > %i\n",keycode);
// 	return 0;
// }

// int	moushook(int button, int x ,int y ,void *b)
// {
// 	printf("button > %i\n",button);
// 	printf("(x,y) > (%i,%i)\n",x,y);
// 	return 0;
// }

typedef struct	s_data {
	void	*img_ptr;
	char	*addr;
	int		bits_per_pixel;
	int		line_length;
	int		endian;
	void	*mlx_ptr;
	void	*mlx_win;
}				t_data;
typedef struct	s_point {
	int	x;
	int	y;
}				t_point;

void	my_mlx_pixel_put(t_data *data, int x, int y, int color)
{
	char	*dst;

	dst = data->addr + (y * data->line_length + x * (data->bits_per_pixel / 8));
	*(unsigned int*)dst = color;
}

void	draw_line_x(void * img, t_point p0, t_point p1) //x = f(y)
{
	int a = (p1.x - p0.x)/(p1.y - p0.y);
	int b = p0.x - (a * p0.y);
	if (p1.y < p0.y)
	{
		t_point t = p0;
		p0 = p1;
		p1 = t;
	}
	int x;
	int y = p0.y;
	while (y <= p1.y)
	{
		x = (a * y) + b;
		my_mlx_pixel_put(img, x, y, 0xFFFFFF);
		y++;
	}
}

void	draw_line_y(void * img, t_point p0, t_point p1)
{
	int a = (p1.y - p0.y)/(p1.x - p0.x);
	int b = p0.y - (a * p0.x);
	if (p1.x < p0.x)
	{
		t_point t = p0;
		p0 = p1;
		p1 = t;
	}
	int x = p0.x;
	int y ;
	while (x <= p1.x)
	{
		y = (a * x) + b;
		my_mlx_pixel_put(img, x, y, 0xFFFFFF);
		x++;
	}
}

int	mouse_hook(int x,int y,void *img)
{
	t_data *temp = img;
	printf("mouse = (%i,%i)\n",x,y);
	my_mlx_pixel_put(img, x, y, 0x00FFFFFF);
	mlx_put_image_to_window(temp->mlx_ptr,temp->mlx_win, temp->img_ptr, 0, 0);
	return 0;
}

int main(void)
{
	int x = 200;
	int y = 400;
	int z = 400;
	t_point p0;
	t_point p1;
	t_data img;
	void	*mlx_ptr = mlx_init();
	void	*mlx_win = mlx_new_window(mlx_ptr, 900, 900,"games");
	img.img_ptr = mlx_new_image(mlx_ptr, 900, 900);
	img.addr = mlx_get_data_addr(img.img_ptr, &img.bits_per_pixel, &img.line_length, &img.endian);
	img.mlx_ptr = mlx_ptr;
	img.mlx_win = mlx_win;
	mlx_hook(mlx_win, 6, 0,mouse_hook ,&img);
	mlx_loop(mlx_ptr);
	return (0);
}